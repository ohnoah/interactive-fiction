apple
first_room.apple
¬ALREADY VALID KU KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='first_room.apple', slotToUpdate='preliminary', foreignFrame='null', foreignSlot='null', updateConstant=4.0}
banana
first_room.banana
apple::mass > 4.0
first_room.apple::mass > 4.0
world::items IS []
world::items IS []
apple::isContainer
first_room.apple::isContainer
world::inventory IS []
world::inventory IS []
ªALREADY VALID KU KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='world', slotToUpdate='applesCollected', foreignFrame='null', foreignSlot='null', updateConstant=5.0}
apple
first_room.apple
apple
first_room.apple
∑ALREADY VALID KU KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='world', slotToUpdate='randomState', foreignFrame='null', foreignSlot='null', updateConstant=4.0}
apple::mass > 4.0
first_room.apple::mass > 4.0
’{first_room.apple=[green,sour] apple from room: first room, first_room.banana=[] banana from room: first room, first_room.apple_2=[] apple from room: first room, first_room.orange=[] orange from room: first room}
¿2EnhancedGameEngine{designerActions={Room{name='first room', items={first_room.apple_2=[] apple from room: first room, first_room.apple=[green,sour] apple from room: first room, first_room.banana=[] banana from room: first room, first_room.orange=[] orange from room: first room}}={InstantiatedGameAction{abstractActionFormat=open [0], potentialArguments=null, actualArguments=[[] banana from room: first room], it=null}=EnhancedGameDesignAction{preconditions=[Condition{booleanExpr='first_room.apple::mass > 4.0', failureMessage='The mass is not right. It is first_room.apple::mass'}, Condition{booleanExpr='world::items IS []', failureMessage='The inventory is nto right. It is world::items'}, Condition{booleanExpr='first_room.apple::isContainer', failureMessage='The apple is not a container. It is first_room.apple::isContainer'}, Condition{booleanExpr='world::inventory IS []', failureMessage='The inventory is not empty'}], message='You succeeded. world::randomState is random state', updateState=[KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='world', slotToUpdate='applesCollected', foreignFrame='null', foreignSlot='null', updateConstant=5.0}, KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='first_room.apple', slotToUpdate='mass', foreignFrame='null', foreignSlot='null', updateConstant=3.0}, KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='first_room.apple', slotToUpdate='isContainer', foreignFrame='null', foreignSlot='null', updateConstant=true}, KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='world', slotToUpdate='randomState', foreignFrame='null', foreignSlot='null', updateConstant=4.0}]}, InstantiatedGameAction{abstractActionFormat=examine [0], potentialArguments=null, actualArguments=[[] banana from room: first room], it=null}=EnhancedGameDesignAction{preconditions=[Condition{booleanExpr='first_room.apple::mass > 4.0', failureMessage='The mass is not right. It is first_room.apple::mass'}], message='The apple is green and juicy. It is first_room.banana::randomTrait9', updateState=[]}, InstantiatedGameAction{abstractActionFormat=eat [0], potentialArguments=null, actualArguments=[[] banana from room: first room], it=null}=EnhancedGameDesignAction{preconditions=[Condition{booleanExpr='first_room.apple::mass > 4.0', failureMessage='The mass is not right. It is first_room.apple::mass'}, Condition{booleanExpr='world::items IS []', failureMessage='The inventory is nto right. It is world::items'}, Condition{booleanExpr='first_room.apple::isContainer', failureMessage='The apple is not a container. It is first_room.apple::isContainer'}, Condition{booleanExpr='world::inventory IS []', failureMessage='The inventory is not empty'}], message='You succeeded. world::randomState is random state', updateState=[KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='world', slotToUpdate='applesCollected', foreignFrame='null', foreignSlot='null', updateConstant=5.0}, KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='first_room.apple', slotToUpdate='mass', foreignFrame='null', foreignSlot='null', updateConstant=3.0}, KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='first_room.apple', slotToUpdate='isContainer', foreignFrame='null', foreignSlot='null', updateConstant=true}, KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='world', slotToUpdate='randomState', foreignFrame='null', foreignSlot='null', updateConstant=4.0}]}, InstantiatedGameAction{abstractActionFormat=put [0] in [1], potentialArguments=null, actualArguments=[[] banana from room: first room, [green,sour] apple from room: first room], it=null}=EnhancedGameDesignAction{preconditions=[Condition{booleanExpr='first_room.apple::mass > 4.0', failureMessage='The mass is not right. It is first_room.apple::mass'}, Condition{booleanExpr='world::items IS []', failureMessage='The inventory is nto right. It is world::items'}, Condition{booleanExpr='first_room.apple::isContainer', failureMessage='The apple is not a container. It is first_room.apple::isContainer'}, Condition{booleanExpr='world::inventory IS []', failureMessage='The inventory is not empty'}], message='You succeeded. world::randomState is random state', updateState=[KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='world', slotToUpdate='applesCollected', foreignFrame='null', foreignSlot='null', updateConstant=5.0}, KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='first_room.apple', slotToUpdate='mass', foreignFrame='null', foreignSlot='null', updateConstant=3.0}, KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='first_room.apple', slotToUpdate='isContainer', foreignFrame='null', foreignSlot='null', updateConstant=true}, KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='world', slotToUpdate='randomState', foreignFrame='null', foreignSlot='null', updateConstant=4.0}]}, InstantiatedGameAction{abstractActionFormat=put [0] on [1], potentialArguments=null, actualArguments=[[] banana from room: first room, [green,sour] apple from room: first room], it=null}=EnhancedGameDesignAction{preconditions=[Condition{booleanExpr='first_room.apple::mass > 4.0', failureMessage='The mass is not right. It is first_room.apple::mass'}, Condition{booleanExpr='world::items IS []', failureMessage='The inventory is nto right. It is world::items'}, Condition{booleanExpr='first_room.apple::isContainer', failureMessage='The apple is not a container. It is first_room.apple::isContainer'}, Condition{booleanExpr='world::inventory IS []', failureMessage='The inventory is not empty'}], message='You succeeded. world::randomState is random state', updateState=[KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='world', slotToUpdate='applesCollected', foreignFrame='null', foreignSlot='null', updateConstant=5.0}, KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='first_room.apple', slotToUpdate='mass', foreignFrame='null', foreignSlot='null', updateConstant=3.0}, KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='first_room.apple', slotToUpdate='isContainer', foreignFrame='null', foreignSlot='null', updateConstant=true}, KnowledgeUpdate{updateType=SET, settingType=CONSTANT, frameToUpdate='world', slotToUpdate='randomState', foreignFrame='null', foreignSlot='null', updateConstant=4.0}]}}}, knowledgeBase=KnowledgeBase{ 
1 genericFrames=GenericFrame{ id='nonContainer' ,
r slots={isEdible=false, isTakeable=false, isContained=false, isContainer=false, state=solid, isDrinkable=false}},
GenericFrame{ id='container' ,
^ slots={volume=50.0, contains=[], isContained=false, isContainer=true, internalVolume=50.0}},
GenericFrame{ id='massive' ,
 slots={mass=50.0}},
 GenericFrame{ id='voluminous' ,
 slots={volume=50.0}},
GenericFrame{ id='takeable' ,
 slots={isTakeable=true}},
GenericFrame{ id='edible' ,
. slots={isEdible=true, taste=uninteresting}},
GenericFrame{ id='drinkable' ,
L slots={volume=50.0, taste=uninteresting, state=liquid, isDrinkable=true}},
GenericFrame{ id='fruit' ,
+ slots={elasticity=high, fruitiness=4.0}},
+ specificFrames=SpecificFrame{ id='world',
r slots={liftingPower=100.0, errorMessage=You can't do that right now., inventory=[], items=[], room=first room}},
&SpecificFrame{ id='first_room.apple',
˝ slots={isEdible=false, isTakeable=false, elasticity=high, mass=50.0, isContainer=true, internalVolume=50.0, randomTrait9=happy, fruitiness=4.0, volume=50.0, contains=[], isContained=false, name=apple, state=solid, isDrinkable=false, preliminary=4.0}},
'SpecificFrame{ id='first_room.banana',
¥ slots={isEdible=false, isTakeable=false, elasticity=high, isContained=false, mass=1000.0, isContainer=false, state=solid, isDrinkable=false, randomTrait9=happy, fruitiness=4.0}},
(SpecificFrame{ id='first_room.apple_2',
} slots={isEdible=false, isTakeable=false, isContained=false, mass=50.0, isContainer=false, state=solid, isDrinkable=false}},
'SpecificFrame{ id='first_room.orange',
Å slots={isEdible=false, isTakeable=false, isContained=false, mass=50.0, isContainer=false, state=solid, isDrinkable=false}}}, worldRooms=[Room{name='first room', items={first_room.apple_2=[] apple from room: first room, first_room.apple=[green,sour] apple from room: first room, first_room.banana=[] banana from room: first room, first_room.orange=[] orange from room: first room}}], currentRoom=Room{name='first room', items={first_room.apple_2=[] apple from room: first room, first_room.apple=[green,sour] apple from room: first room, first_room.banana=[] banana from room: first room, first_room.orange=[] orange from room: first room}}}
