start{
	"first room";
	"Welcome to the first room";
}

item{
	(apple);
	.item_name "apple";
	.adjectives [sour, green];
	.synonyms ["green fruit"];
	.item_knowledge ['apple::randomTrait9 := "happy"', 'first_room.apple::preliminary := 4.0'];
}

room{
	.room_name "first room";
	.actions #(putActionOne), #(examineTwo);
	.items "banana", #(apple), "apple";
}


custom_trigger{
	move;
}

precond{
	(appleMass);
	'first_room.apple::mass > 4.0' ("The mass is not right");
}

postcond{
	(appleNewMass);
	'first_room.apple::mass := 5.0';
}



action{
	(putActionOne);
	.action_triggers [put-0, put-1, take];
	.prefix_room "first room";
	.args ["banana", "apple"];
	.preconds [#(appleMass), 'first_room.apple::isContainer' ("The apple is not a container")];
	.postconds [#(appleNewMass), 'first_room.apple::isContainer := true'];
	.success_msg "You succeeded";
}

add_trigger{
	#(putActionOne);
	.room "first room";
	.action_triggers [eat, open];
	.args ["banana"];
}

generic_frame{
	"fruit";
	[fruitiness<-"4.0", elasticity<-"high"];
}

knowledge{
	.generic_inheritance [#(apple), "first_room.banana"] inherits "fruit", [#(apple)] inherits "container";
	.initial ['first_room.banana::mass := 1000', 'first_room.apple::name := "apple"'];
}


